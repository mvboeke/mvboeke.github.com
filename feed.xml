<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2013-09-10T00:00:00Z</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Self-hosting Google web fonts</title>
    <link rel="alternate" href="/blog/2013/09/10/Self-hosting-Google-web-fonts/"/>
    <id>/blog/2013/09/10/Self-hosting-Google-web-fonts/</id>
    <published>2013-09-10T00:00:00Z</published>
    <updated>2013-09-10T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;When using web fonts from &lt;a href='http://www.google.com/fonts'&gt;Google Fonts&lt;/a&gt;, it generally makes sense to take advantage of the files hosted on Google’s CDN. However, there are legitimate reasons to host fonts yourself sometimes. If you need to keep your tinfoil hat on at all times, because your site attracts bad guys, you may not want to take the risk of running code from a third party, even one as respected and august as The Google. That is indeed the case at Braintree, where we decided to host fonts on our own servers.&lt;/p&gt;

&lt;p&gt;So we downloaded the TTF files from Google Fonts, and ran them through Font Squirrel’s &lt;a href='http://www.fontsquirrel.com/tools/webfont-generator'&gt;web font generator&lt;/a&gt; to get a bulletproof font stack. Everything looked brilliant on the the Mac, but the font rendering was corrupted on both Chrome and Firefox on Windows.&lt;/p&gt;

&lt;h4 id='all_woffs_are_not_created_equal'&gt;All WOFFs are not created equal&lt;/h4&gt;
&lt;img alt='Comparing Google Fonts WOFF files on Windows Chrome' class='blog-image' src='/images/blog/woff-comparison.png' /&gt;
&lt;p&gt;&lt;/p&gt;

&lt;p&gt;After much experimentation I tried using the Google-hosted version and it looked correct on Windows. I was puzzled because on both operating systems, Chrome was using the same WOFF file from our server. But with a bit of digging, I found that the Google Fonts API serves a different WOFF file to Chrome/Windows than it does to Chrome/OSX. So I downloaded the WOFF file that Google serves up to Chrome/Windows and added that to our site’s assets. It renders well across all major browsers and operating systems.&lt;/p&gt;

&lt;p&gt;The lesson learned here: download the Chrome/Windows WOFF from Google Fonts if you want to host it yourself.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I’m still not clear on why Google Fonts serves up different WOFF files for Windows and OSX. Does anyone out there know the reason for this?&lt;/em&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Perceived performance is what matters</title>
    <link rel="alternate" href="/blog/2013/07/16/Perceived-performance-is-what-matters/"/>
    <id>/blog/2013/07/16/Perceived-performance-is-what-matters/</id>
    <published>2013-07-16T00:00:00Z</published>
    <updated>2013-07-16T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;Recently, Drew Crawford&amp;#8217;s excellent article &lt;a href='http://sealedabstract.com/rants/why-mobile-web-apps-are-slow/'&gt;&lt;em&gt;Why Mobile Web Apps are Slow&lt;/em&gt;&lt;/a&gt; got a lot of attention on the intertweets. It is a worthwhile read, and I recommend it.&lt;/p&gt;

&lt;p&gt;As someone who has been a proponent of the open web and HTML5 apps, I have to admit to participating in some of the blind booster-ism the author identifies at the beginning of the article. While some of the technical discussion in the piece is beyond my expertise, I find it to be a pretty compelling argument against my default position.&lt;/p&gt;

&lt;p&gt;But while I can&amp;#8217;t dispute his arguments for the advantages of native apps, I can&amp;#8217;t agree completely with Crawford&amp;#8217;s conclusion. Basically he makes a super-compelling argument for why native apps are faster than mobile web apps (and will likely remain faster) and then concludes that people shouldn&amp;#8217;t create mobile web apps. I think what he ignores is that web apps can achieve &lt;em&gt;perceived&lt;/em&gt; performance on a par with native apps in many cases. There are apps out there that prove it is possible to create beautiful, responsive, web apps on current hardware. &lt;/p&gt;

&lt;p&gt;For two good examples, check out &lt;a href='Forecast.io'&gt;&lt;em&gt;Forecast.io&lt;/em&gt;&lt;/a&gt; on an iPhone 5 or the &lt;a href='app.ft.com'&gt;&lt;em&gt;Financial Times app&lt;/em&gt;&lt;/a&gt; on a current-generation iPad. The producers of those apps traded some ultimate performance away, but didn&amp;#8217;t really have to compromise user experience (at least for current-generation devices). They gained some substantial advantages by doing so: writing one app for multiple platforms, updating apps automatically, avoiding the App Store tax, and more. The folks behind Forecast.io even published a great article about &lt;a href='http://blog.forecast.io/its-not-a-web-app-its-an-app-you-install-from-the-web/'&gt;&lt;em&gt;how to build mobile web apps&lt;/em&gt;&lt;/a&gt; that &lt;em&gt;feel&lt;/em&gt; native.&lt;/p&gt;

&lt;p&gt;One of the other advantages that web apps have, is the ability to provide a great user experience within the web view of another app. When you link to something within Twitter, or search using the Google app on the iPhone, you&amp;#8217;re going to end up at the web view. GitHub points to this very use case in their recent blog post.&lt;/p&gt;

&lt;p&gt;I&amp;#8217;m certainly not claiming that people shouldn&amp;#8217;t make native apps. Most of the apps I love are native apps. However, I think most products would best serve their customers by providing an excellent mobile web experience to complement their apps. I&amp;#8217;m curious to watch the Mozilla folks and others push the boundaries of modern mobile web apps, where performance will be the primary challenge. There is much to be gained by continuing down that path, despite the challenges.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>UI Antipatterns: Hinting instead of acting</title>
    <link rel="alternate" href="/blog/2013/03/07/UI-Antipatterns-Hinting-instead-of-acting/"/>
    <id>/blog/2013/03/07/UI-Antipatterns-Hinting-instead-of-acting/</id>
    <published>2013-03-07T00:00:00Z</published>
    <updated>2013-03-07T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;I’m going to explore more mobile UI antipatterns, starting with what I call “hinting instead of acting”. This is when a UI hints at the proper action a user should have taken, rather than just doing what the user expects.&lt;/p&gt;
&lt;img alt='Google Maps on iOS' class='blog-image' src='/images/blog/iOS_Google_maps.png' /&gt;
&lt;p&gt;I love the Google Maps app on iOS (huzzah for public transit directions!), but it employed this antipattern when it launched. When you touched a pin on the map, it caused the bottom of the screen to bounce, hinting that you should swipe upwards to get directions and other options. Why not just open the panel when a user touches the pin?&lt;/p&gt;

&lt;p&gt;I think Google was hoping to train users to swipe first, and borrowed the bouncing-bar trick from Apple. The iOS team got kudos for using this approach on the camera button of the unlock screen. However, it’s a really different use case, because you don’t want to make the camera too easy to trigger on the unlock screen, or you’d end up with a lot of pocket shots on the photo roll. It makes sense for iOS to require the more intensive swipe gesture, to make sure that the action is deliberate.&lt;/p&gt;

&lt;p&gt;However, in the case of Google maps, the user is clearly interacting with the UI in an intentional manner. If enough users make the “mistake” of touching the pin that it warrants a hint, then Google maps should just accept the input request and give the user what they’re asking for. Clearly, the Google Maps app team agreed, and changed the behavior in a subsequent release. Iterative development FTW.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Where else have you seen hinting where action was warranted? What other mobile UI antipatterns have you found? Drop a comment below.&lt;/em&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Design critiques are loaded with BS, and that’s OK</title>
    <link rel="alternate" href="/blog/2013/02/20/design-critiques-are-loaded-with-bs-and-thats-ok/"/>
    <id>/blog/2013/02/20/design-critiques-are-loaded-with-bs-and-thats-ok/</id>
    <published>2013-02-20T00:00:00Z</published>
    <updated>2013-02-20T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;I’m currently reading Jonathon Haidt’s &lt;a href='http://www.amazon.com/The-Righteous-Mind-Politics-ebook/dp/B0052FF7YM/ref=sr_1_1?s=digital-text&amp;amp;ie=UTF8&amp;amp;qid=1361423547&amp;amp;sr=1-1&amp;amp;keywords=the+righteous+mind'&gt;&lt;em&gt;The Righteous Mind&lt;/em&gt;&lt;/a&gt;. It’s a book about morality and politics, but it is challenging some of my long-held conceptions about the design process, particularly critiques.&lt;/p&gt;

&lt;p&gt;In the first segment of the book, Haidt makes a compelling argument that judgement and justification are two separate processes. Judgment is immediate and intuitive, and whether we choose to believe it, justification comes only after we’ve made our intuitive response to something. As he states it succinctly Intuitions come first, strategic reasoning second.&lt;/p&gt;

&lt;p&gt;This has some pretty profound implications for design critique. No matter how much we try to rationally analyze whether a design solves a given problem, we are actually going to judge it first on an intuitive level. When we analyze it’s effectiveness, we will inevitably come up with reasons that justify our our initial intuitive reaction.&lt;/p&gt;

&lt;p&gt;I see a lot of this evident in the discourse surrounding flat vs. skeurmorphic design. I think a lot of designers are just tired of the detailed aesthetic that has dominated product and web design for so many years. They are eager to explore a new aesthetic and they justify the new trend as more honest to the medium, or more virtuous in its simplicity.&lt;/p&gt;

&lt;p&gt;As I first grappled with this notion, I was a bit disheartened. After all, I greatly value the dialogue inherent in design critique. I’ve always believed that if you involve the right people in critique, you end up with better design. As the first designer at a several startups, I often lamented how hard it was to do my best design work in isolation. Does the fact that critique is justification of foregone conclusions make it worthless? In other words, is critical analysis of design just a load of BS to support personal biases? Maybe so, but maybe that’s ok.&lt;/p&gt;

&lt;p&gt;Haidt points out that reasoning and justification serve an important purpose:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“Intuitions come first and reasoning is usually produced after a judgment is made, in order to influence other people. But as a discussion progresses, the reasons given by other people sometimes change our intuitions and judgments.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, perhaps critical analysis is the mechanism by which good taste can spread between designers. Taste is ephemeral, subjective, and highly intuitive. It’s hard to teach or share an intuition, but through critique, we can use justification to influence others and maybe spread good taste.&lt;/p&gt;

&lt;p&gt;Of course, there is a danger here. The intuitions that spread most successfully may come from the most effective arguers, rather than the designers with the best taste. But there really isn’t another mechanism for sharing intuition, and if designers are cognizant of the pitfalls, we can apply an appropriate filter when accepting feedback from more or less persuasive personalities.&lt;/p&gt;

&lt;p&gt;I’d love to hear other designers thoughts and experiences with critique. Have you ever been caught without justification for your intuition? Has anyone ever changed your mind about one of your own designs?&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>What is a UI antipattern?</title>
    <link rel="alternate" href="/blog/2012/12/20/What-is-a-UI-antipattern/"/>
    <id>/blog/2012/12/20/What-is-a-UI-antipattern/</id>
    <published>2012-12-20T00:00:00Z</published>
    <updated>2012-12-20T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;I kicked off this series of posts without really delving into what qualifies as a UI antipattern. I was talking about my UI antipatterns posts with a couple of developer friends at Braintree, and one commented that “it’s fun to point out when people are doing it wrong online”. I wouldn’t disagree, but just because some site is doing it wrong, doesn’t mean it’s an antipattern. Sometimes it’s just crappy design, or total lack of design.&lt;/p&gt;
&lt;img alt='Mosaic pattern' class='blog-image' src='/images/blog/pattern.jpg' /&gt;
&lt;p&gt;To qualify as an antipattern, it has to be a repeated pattern that appears to be beneficial at first, but turns out to create more unintended problems. Additionally, a better answer to the problem has to exist and be documentable and repeatable.&lt;/p&gt;

&lt;p&gt;In all the posts I’m tackling as part of the UI antipatterns series, I’m trying to sympathize with the original intent of the design and offer a better alternative - not just point out the flaws.&lt;/p&gt;

&lt;p&gt;I’m also choosing to deal with antipatterns mostly at the user interface (UI) level, rather than at the broader level of user experience (UX). There might be plenty of antipatterns to mine out of the user experience, but I’ll leave that to a later time.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;What UI antipatterns do you see on the web or on your mobile device? If you have one that you think is worth exploring, please let me know and I’ll writ it up here.&lt;/em&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>UI Antipatterns: Repeat Data Collection</title>
    <link rel="alternate" href="/blog/2012/12/12/UI-Antipatterns-Repeat-Data-Collection/"/>
    <id>/blog/2012/12/12/UI-Antipatterns-Repeat-Data-Collection/</id>
    <published>2012-12-12T00:00:00Z</published>
    <updated>2012-12-12T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;This is an antipattern I’ve come across many times while working on financial software. It often occurs when a website is trying to present one form that will map to multiple systems, or will be used to replicate a physical form (e.g. a credit application). Few things are more frustrating to a user than having to fill out the same data multiple times. It adds no value, increases the likelihood of error, and causes people to tear their hair out.&lt;/p&gt;

&lt;p&gt;For example, let’s take a look at the &lt;a href='http://www.active.com/framed/event_detail.cfm?EVENT_ID=2066969&amp;amp;RESET=0&amp;amp;CHECKSSO=0'&gt;&lt;em&gt;Active.com signup for the Shamrock Shuffle&lt;/em&gt;&lt;/a&gt; (a great springtime running race in Chicago). It starts off with just a few questions about my age. Thankfully, it calculates my age for me, based on my birthdate, but it won’t infer that I’m older than 16.&lt;/p&gt;
&lt;img alt='Repeat data collection' class='blog-image' src='/images/blog/repeat_data_collection1.gif' /&gt;
&lt;p&gt;&lt;/p&gt;

&lt;p&gt;As I get to this next section, they’re asking for my birthdate again. They ask my age again too…except this time they don’t calculate it for me.&lt;/p&gt;
&lt;img alt='Repeat data collection' class='blog-image' src='/images/blog/repeat_data_collection2.gif' /&gt;
&lt;p&gt;Finally, when I get to step three, they ask me one more time if I’m 16 years or older, even though I’ve answered this very question already, and have given them my age and birthdate…twice. Yep, I’m still over 16!&lt;/p&gt;
&lt;img alt='Repeat data collection' class='blog-image' src='/images/blog/repeat_data_collection3.gif' /&gt;
&lt;p&gt;This redundancy is particularly frustrating for those of us who make software. We know it’s possible for the software to map one answer into multiple fields. When you have to collect a lot of data from a user, it’s easy to get focused on where the data is eventually going to live (e.g. in a form or another system) but if you want people to complete your form, you have to focus on the user instead.&lt;/p&gt;</content>
  </entry>
</feed>
