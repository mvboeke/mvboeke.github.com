<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2013-03-07T00:00:00Z</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>UI Antipatterns: Hinting instead of acting</title>
    <link rel="alternate" href="/blog/2013/03/07/UI-Antipatterns-Hinting-instead-of-acting/"/>
    <id>/blog/2013/03/07/UI-Antipatterns-Hinting-instead-of-acting/</id>
    <published>2013-03-07T00:00:00Z</published>
    <updated>2013-03-07T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;I’m going to explore more mobile UI antipatterns, starting with what I call “hinting instead of acting”. This is when a UI hints at the proper action a user should have taken, rather than just doing what the user expects.&lt;/p&gt;

&lt;p&gt;&lt;img alt='Google Maps on iOS' src='/images/blog/iOS_Google_maps.png' /&gt;&lt;/p&gt;

&lt;p&gt;I love the Google Maps app on iOS (huzzah for public transit directions!), but it employed this antipattern when it launched. When you touched a pin on the map, it caused the bottom of the screen to bounce, hinting that you should swipe upwards to get directions and other options. Why not just open the panel when a user touches the pin?&lt;/p&gt;

&lt;p&gt;I think Google was hoping to train users to swipe first, and borrowed the bouncing-bar trick from Apple. The iOS team got kudos for using this approach on the camera button of the unlock screen. However, it’s a really different use case, because you don’t want to make the camera too easy to trigger on the unlock screen, or you’d end up with a lot of pocket shots on the photo roll. It makes sense for iOS to require the more intensive swipe gesture, to make sure that the action is deliberate.&lt;/p&gt;

&lt;p&gt;However, in the case of Google maps, the user is clearly interacting with the UI in an intentional manner. If enough users make the “mistake” of touching the pin that it warrants a hint, then Google maps should just accept the input request and give the user what they’re asking for. Clearly, the Google Maps app team agreed, and changed the behavior in a subsequent release. Iterative development FTW.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Where else have you seen hinting where action was warranted? What other mobile UI antipatterns have you found? Drop a comment below.&lt;/em&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Design critiques are loaded with BS, and that’s OK</title>
    <link rel="alternate" href="/blog/2013/02/20/design-critiques-are-loaded-with-bs-and-thats-ok/"/>
    <id>/blog/2013/02/20/design-critiques-are-loaded-with-bs-and-thats-ok/</id>
    <published>2013-02-20T00:00:00Z</published>
    <updated>2013-02-20T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;I’m currently reading Jonathon Haidt’s &lt;a href='http://www.amazon.com/The-Righteous-Mind-Politics-ebook/dp/B0052FF7YM/ref=sr_1_1?s=digital-text&amp;amp;ie=UTF8&amp;amp;qid=1361423547&amp;amp;sr=1-1&amp;amp;keywords=the+righteous+mind'&gt;&lt;em&gt;The Righteous Mind&lt;/em&gt;&lt;/a&gt;. It’s a book about morality and politics, but it is challenging some of my long-held conceptions about the design process, particularly critiques.&lt;/p&gt;

&lt;p&gt;In the first segment of the book, Haidt makes a compelling argument that judgement and justification are two separate processes. Judgment is immediate and intuitive, and whether we choose to believe it, justification comes only after we’ve made our intuitive response to something. As he states it succinctly Intuitions come first, strategic reasoning second.&lt;/p&gt;

&lt;p&gt;This has some pretty profound implications for design critique. No matter how much we try to rationally analyze whether a design solves a given problem, we are actually going to judge it first on an intuitive level. When we analyze it’s effectiveness, we will inevitably come up with reasons that justify our our initial intuitive reaction.&lt;/p&gt;

&lt;p&gt;I see a lot of this evident in the discourse surrounding flat vs. skeurmorphic design. I think a lot of designers are just tired of the detailed aesthetic that has dominated product and web design for so many years. They are eager to explore a new aesthetic and they justify the new trend as more honest to the medium, or more virtuous in its simplicity.&lt;/p&gt;

&lt;p&gt;As I first grappled with this notion, I was a bit disheartened. After all, I greatly value the dialogue inherent in design critique. I’ve always believed that if you involve the right people in critique, you end up with better design. As the first designer at a several startups, I often lamented how hard it was to do my best design work in isolation. Does the fact that critique is justification of foregone conclusions make it worthless? In other words, is critical analysis of design just a load of BS to support personal biases? Maybe so, but maybe that’s ok.&lt;/p&gt;

&lt;p&gt;Haidt points out that reasoning and justification serve an important purpose:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“Intuitions come first and reasoning is usually produced after a judgment is made, in order to influence other people. But as a discussion progresses, the reasons given by other people sometimes change our intuitions and judgments.”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, perhaps critical analysis is the mechanism by which good taste can spread between designers. Taste is ephemeral, subjective, and highly intuitive. It’s hard to teach or share an intuition, but through critique, we can use justification to influence others and maybe spread good taste.&lt;/p&gt;

&lt;p&gt;Of course, there is a danger here. The intuitions that spread most successfully may come from the most effective arguers, rather than the designers with the best taste. But there really isn’t another mechanism for sharing intuition, and if designers are cognizant of the pitfalls, we can apply an appropriate filter when accepting feedback from more or less persuasive personalities.&lt;/p&gt;

&lt;p&gt;I’d love to hear other designers thoughts and experiences with critique. Have you ever been caught without justification for your intuition? Has anyone ever changed your mind about one of your own designs?&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>What is a UI antipattern?</title>
    <link rel="alternate" href="/blog/2012/12/20/What-is-a-UI-antipattern/"/>
    <id>/blog/2012/12/20/What-is-a-UI-antipattern/</id>
    <published>2012-12-20T00:00:00Z</published>
    <updated>2012-12-20T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;I kicked off this series of posts without really delving into what qualifies as a UI antipattern. I was talking about my UI antipatterns posts with a couple of developer friends at Braintree, and one commented that “it’s fun to point out when people are doing it wrong online”. I wouldn’t disagree, but just because some site is doing it wrong, doesn’t mean it’s an antipattern. Sometimes it’s just crappy design, or total lack of design.&lt;/p&gt;

&lt;p&gt;&lt;img alt='Mosaic pattern' src='/images/blog/pattern.jpg' /&gt;&lt;/p&gt;

&lt;p&gt;To qualify as an antipattern, it has to be a repeated pattern that appears to be beneficial at first, but turns out to create more unintended problems. Additionally, a better answer to the problem has to exist and be documentable and repeatable.&lt;/p&gt;

&lt;p&gt;In all the posts I’m tackling as part of the UI antipatterns series, I’m trying to sympathize with the original intent of the design and offer a better alternative - not just point out the flaws.&lt;/p&gt;

&lt;p&gt;I’m also choosing to deal with antipatterns mostly at the user interface (UI) level, rather than at the broader level of user experience (UX). There might be plenty of antipatterns to mine out of the user experience, but I’ll leave that to a later time.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;What UI antipatterns do you see on the web or on your mobile device? If you have one that you think is worth exploring, please let me know and I’ll writ it up here.&lt;/em&gt;&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>UI Antipatterns: Repeat Data Collection</title>
    <link rel="alternate" href="/blog/2012/12/12/UI-Antipatterns-Repeat-Data-Collection/"/>
    <id>/blog/2012/12/12/UI-Antipatterns-Repeat-Data-Collection/</id>
    <published>2012-12-12T00:00:00Z</published>
    <updated>2012-12-12T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;This is an antipattern I’ve come across many times while working on financial software. It often occurs when a website is trying to present one form that will map to multiple systems, or will be used to replicate a physical form (e.g. a credit application). Few things are more frustrating to a user than having to fill out the same data multiple times. It adds no value, increases the likelihood of error, and causes people to tear their hair out.&lt;/p&gt;

&lt;p&gt;For example, let’s take a look at the &lt;a href='http://www.active.com/framed/event_detail.cfm?EVENT_ID=2066969&amp;amp;RESET=0&amp;amp;CHECKSSO=0'&gt;&lt;em&gt;Active.com signup for the Shamrock Shuffle&lt;/em&gt;&lt;/a&gt; (a great springtime running race in Chicago). It starts off with just a few questions about my age. Thankfully, it calculates my age for me, based on my birthdate, but it won’t infer that I’m older than 16.&lt;/p&gt;

&lt;p&gt;&lt;img alt='Repeat data collection' src='/images/blog/repeat_data_collection1.gif' /&gt;&lt;/p&gt;

&lt;p&gt;As I get to this next section, they’re asking for my birthdate again. They ask my age again too…except this time they don’t calculate it for me.&lt;/p&gt;

&lt;p&gt;&lt;img alt='Repeat data collection' src='/images/blog/repeat_data_collection2.gif' /&gt;&lt;/p&gt;

&lt;p&gt;Finally, when I get to step three, they ask me one more time if I’m 16 years or older, even though I’ve answered this very question already, and have given them my age and birthdate…twice. Yep, I’m still over 16!&lt;/p&gt;

&lt;p&gt;&lt;img alt='Repeat data collection' src='/images/blog/repeat_data_collection3.gif' /&gt;&lt;/p&gt;

&lt;p&gt;This redundancy is particularly frustrating for those of us who make software. We know it’s possible for the software to map one answer into multiple fields. When you have to collect a lot of data from a user, it’s easy to get focused on where the data is eventually going to live (e.g. in a form or another system) but if you want people to complete your form, you have to focus on the user instead.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>UI Antipatterns: Splitting Numbers</title>
    <link rel="alternate" href="/blog/2012/11/28/ui-antipatterns-splitting-numbers/"/>
    <id>/blog/2012/11/28/ui-antipatterns-splitting-numbers/</id>
    <published>2012-11-28T00:00:00Z</published>
    <updated>2012-11-28T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;When collecting a US phone number on a web form, it has become convention to collect it with three separate fields. This is meant to help the user successfully input the number in the format the server will accept. Since the user may think of the phone number as one piece of data, rather than three distinct items, many sites employ a feature that jumps the cursor to the next field as soon as it is filled with the expected numbers of characters.&lt;/p&gt;

&lt;p&gt;&lt;img alt='Split phone number' src='/images/blog/split_numbers1.png' /&gt;&lt;/p&gt;

&lt;p&gt;This will totally screw up a user like me, who is used to powering through web forms by hammering the tab key as soon as I complete a field. Which leads to the unfortunate situation illustrated below.&lt;/p&gt;

&lt;p&gt;The good folks at Southwest Airlines have tried to help me by moving my cursor to the second field in the phone number, but I’ve already hit the tab key. So I’ve skipped the second field entirely and gone straight to the third. Doh. Hence, an antipattern.&lt;/p&gt;

&lt;p&gt;Luckily, we are living in a grand age of Javascript wizardry. We can now format phone numbers on the fly with plugins like jQuery Format Phone or Masked Input Plugin. We can just let the user enter the number into the field naturally, including or not including special characters as they wish, and format the number for them as they type. The end result might look something like this.&lt;/p&gt;

&lt;p&gt;&lt;img alt='Auto formatting phone number' src='/images/blog/split_numbers2.png' /&gt;&lt;/p&gt;

&lt;p&gt;This particular antipattern shows up in more situations than just phone number fields. Social Security Numbers and other places where sites collect numbers that include dashes or other formatting are prone to fall into the same trap.&lt;/p&gt;

&lt;p&gt;A single field is more natural for a user, and utilizing Javascript to format the field as the user types will ensure that it is formatted as expected for both the user and the server.&lt;/p&gt;</content>
  </entry>
  <entry>
    <title>Sales Timelines Explained for Geeks</title>
    <link rel="alternate" href="/blog/2012/11/01/sales-timelines-explained-for-geeks/"/>
    <id>/blog/2012/11/01/sales-timelines-explained-for-geeks/</id>
    <published>2012-11-01T00:00:00Z</published>
    <updated>2012-11-01T00:00:00Z</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;When we were first starting up Backstop, we would watch eagerly as each new customer advanced through the sales pipeline, and tear our hair out as deals seemed to drag on forever. Years later, I still hear the development teams I work with at Braintree asking ”when will deal X be done?” So, I thought it might be useful to write down this explanation I came up with for that early Backstop dev team.&lt;/p&gt;

&lt;p&gt;The best way for a geek to understand the situation is to think about the deal as an entity with a dual quantum nature, similar to light. It possess both the linear characteristics of a wave and some decidedly non-linear characteristics that suggest a particle nature.&lt;/p&gt;

&lt;p&gt;In the early or middle phases of deal negotiation, things progress along a fairly linear and predictable path. All parties involved agree that they are headed for completion at a reasonably forseeable date.&lt;/p&gt;

&lt;p&gt;&lt;img alt='Moving' src='/images/blog/deal_moving.png' /&gt;&lt;/p&gt;

&lt;p&gt;However, near the end of the deal negotiation process, lawyers, bosses, procurement departments and other gatekeepers get involved. You can think about these gatekeepers as a reflective box with a diffraction grate on both sides. The wave-like deal hits the first diffraction grating, and it appears as if it should emerge out of the other side at a predictable point in time. However, once the gatekeepers get involved everything goes quantum. The deal takes on a particle nature, and those particles bounce around inside the box for an indeterminate duration, until one of them happens pop out of the slit on the other side. This is effectively random and can’t be predicted by any of the parties involved, much to the chagrin of everyone whose livelihood depends on the deal.&lt;/p&gt;

&lt;p&gt;&lt;img alt='Quantum' src='/images/blog/deal_quantum.png' /&gt;&lt;/p&gt;

&lt;p&gt;What is to be done about this? Not much. Most sales and business development people know enough to try to skip the lawyers, or to at least get contracts in front of them as as early in the process as possible. For development teams, it’s best to realize that completing a deal is a lot like fixing a pernicious bug - it’s almost impossible to predict how long it will take. Embrace the truth that the deal is done when that particle randomly pops out the other side of the box and both sides put ink on paper.&lt;/p&gt;</content>
  </entry>
</feed>
